name: Build Amalgamated Library

on:
  workflow_dispatch:
    inputs: 
      version: 
        type: string
        description: 'Version number Eg: 4.2.0' 

jobs:
  amalgamate:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Make amalgamate script executable
      run: chmod +x ./scripts/amalgamate.py

    - name: Amalgamate
      run: ./scripts/amalgamate.py

    - name: Upload amalgamated files
      uses: actions/upload-artifact@v4
      with:
        name: amalgamated-files
        path: dist

  build-linux:
    needs: amalgamate
    strategy:
      fail-fast: true
      matrix:
        include:
          - arch: x64
            runner: ubuntu-22.04
          - arch: arm64
            runner: ubuntu-22.04-arm
    runs-on: ${{ matrix.runner }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download amalgamated files
      uses: actions/download-artifact@v4
      with:
        name: amalgamated-files
    
    - name: Delete Non Amalgamated Files
      run: |
        rm -f ./src/*.cpp
        rm -rf ./src/Sockets
        rm -rf ./include/pockethttp

    - name: List Dist and Src
      run: |
        tree ./dist/
        tree ./src/

    - name: Install Libraries
      run: |
        sudo apt-get update
        sudo apt-get install -y -f \
        build-essential \
        g++ \
        pkg-config

    - name: Make build script executable
      run: chmod +x ./scripts/bz.py

    - name: Build
      run: ./scripts/bz.py --verbose

    - name: Make binary executable
      run: chmod +x ./bin/pocket-http_linux_${{ matrix.arch }}

    - name: List bin directory contents
      run: ls -la ./bin/
      
    - name: Verify binary exists
      run: |
        if [ ! -f "./bin/pocket-http_linux_${{ matrix.arch }}" ]; then
          echo "Binary not found!"
          exit 1
        fi
      
    - name: Run Binary
      run: ./bin/pocket-http_linux_${{ matrix.arch }} "https://www.example.com"

  build-windows:
    needs: build-linux
    runs-on: windows-2022
    strategy:
      fail-fast: true
      matrix:
        arch: [x64, x86]
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download amalgamated files
      uses: actions/download-artifact@v4
      with:
        name: amalgamated-files

    - name: Delete Non Amalgamated Files
      run: |
        del .\src\*.cpp
        rmdir /s /q .\src\Sockets
        rmdir /s /q .\include\pockethttp

    - name: Build
      run: python ./scripts/bz.py --target_arch ${{ matrix.arch }} --verbose
      shell: cmd
      
    - name: List bin directory contents
      run: dir bin
      shell: cmd
      
    - name: Verify binary exists
      run: |
        if not exist ".\bin\pocket-http_win_${{ matrix.arch }}.exe" (
          echo Binary not found!
          exit /b 1
        )
      shell: cmd
      
    - name: Run Binary
      run: .\bin\pocket-http_win_${{ matrix.arch }}.exe "https://www.example.com"
      shell: cmd

  build-darwin:
    needs: build-windows
    runs-on: macos-14
    strategy:
      fail-fast: true
      matrix:
        arch: [x64, arm64]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download amalgamated files
      uses: actions/download-artifact@v4
      with:
        name: amalgamated-files
    
    - name: Delete Non Amalgamated Files
      run: |
        rm -f ./src/*.cpp
        rm -rf ./src/Sockets
        rm -rf ./include/pockethttp

    - name: Install build dependencies
      run: |
        # Ensure we have the necessary build tools
        xcode-select --install || true

    - name: Make build script executable
      run: chmod +x ./scripts/bz.py

    - name: Build
      run: ./scripts/bz.py --target_arch ${{ matrix.arch }}  --verbose

    - name: Make binary executable
      run: chmod +x ./bin/pocket-http_mac_${{ matrix.arch }}
        
    - name: List bin directory contents
      run: ls -la ./bin/
      
    - name: Verify binary exists
      run: |
        if [ ! -f "./bin/pocket-http_mac_${{ matrix.arch }}" ]; then
          echo "Binary not found!"
          exit 1
        fi
        
    - name: Run Binary
      run: ./bin/pocket-http_mac_${{ matrix.arch }} "https://www.example.com"
  
  release:
    needs: build-darwin
    runs-on: ubuntu-22.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download amalgamated files
      uses: actions/download-artifact@v4
      with:
        name: amalgamated-files

    - name: Create Release Zip
      uses: vimtor/action-zip@v1
      with:
        files: ./dist/pockethttp.hpp ./dist/pockethttp.cpp
        dest: ./dist/pockethttp-v${{ github.event.inputs.version }}.zip
    
    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        tag: v${{ github.event.inputs.version }}
        name: Pocket HTTP v${{ github.event.inputs.version }}
        body: Release of version v${{ github.event.inputs.version }}
        artifacts: ./dist/pockethttp-v${{ github.event.inputs.version }}.zip